/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package arenatojava;

import java.awt.AWTException;
import java.awt.Color;
import java.awt.GraphicsEnvironment;
import java.awt.Image;
import java.awt.Rectangle;
import java.awt.Robot;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.SwingWorker;

/**
 *
 * @author Joep
 */
public class MainForm extends javax.swing.JFrame {

    private Crowd currentCrowd = null;
    private final ImageHandler imgHandler = new ImageHandler();
    private Image currentImage = null;
    private final ProtocolHandler protocolHandler;
    private final Converter converter;
    private SerialHandler serialHandler = null;
    
    private boolean stopThread = false;
    
    /**
     * Creates new form MainForm
     */
    public MainForm()
    {
        this.converter = new Converter();
        this.protocolHandler = new ProtocolHandler();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jInternalFrame1 = new javax.swing.JInternalFrame();
        jButtonScreenshot = new javax.swing.JButton();
        jSPImage = new javax.swing.JScrollPane();
        jButtonCrowd = new javax.swing.JButton();
        jButtonOpenComPort = new javax.swing.JButton();
        jTextFieldComPort = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldBaudRate = new javax.swing.JTextField();
        jLabelComStatus = new javax.swing.JLabel();
        jButtonThreadStart = new javax.swing.JButton();
        jButtonThreadStop = new javax.swing.JButton();

        jInternalFrame1.setVisible(true);

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButtonScreenshot.setText("Take Screenshot");
        jButtonScreenshot.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonScreenshotMouseClicked(evt);
            }
        });

        jButtonCrowd.setText("Get Crowd Info");
        jButtonCrowd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonCrowdMouseClicked(evt);
            }
        });

        jButtonOpenComPort.setText("Open Port");
        jButtonOpenComPort.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonOpenComPortMouseClicked(evt);
            }
        });

        jTextFieldComPort.setText("COM");

        jLabel1.setText("COM Port:");

        jLabel2.setText("BaudRate:");

        jTextFieldBaudRate.setText("38400");

        jLabelComStatus.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelComStatus.setText("COM Port:");

        jButtonThreadStart.setText("Start");
        jButtonThreadStart.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonThreadStartMouseClicked(evt);
            }
        });

        jButtonThreadStop.setText("Stop");
        jButtonThreadStop.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonThreadStopMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jButtonScreenshot, javax.swing.GroupLayout.DEFAULT_SIZE, 146, Short.MAX_VALUE)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jTextFieldComPort))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel2)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jTextFieldBaudRate))
                        .addComponent(jButtonCrowd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonOpenComPort, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabelComStatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButtonThreadStart, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE)
                            .addComponent(jButtonThreadStop, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addComponent(jSPImage, javax.swing.GroupLayout.PREFERRED_SIZE, 649, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonScreenshot)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonCrowd)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldComPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jTextFieldBaudRate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonOpenComPort)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelComStatus)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonThreadStart)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonThreadStop))
                    .addComponent(jSPImage, javax.swing.GroupLayout.PREFERRED_SIZE, 391, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    
    private void jButtonScreenshotMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonScreenshotMouseClicked
        currentImage = imgHandler.takeScreenShot();
        UpdateImageView();
    }//GEN-LAST:event_jButtonScreenshotMouseClicked

    private void jButtonCrowdMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonCrowdMouseClicked
        SQL sql = new SQL();
        
        currentCrowd = sql.getCrowdInfo();
        
        try
        {
            currentImage = converter.Resize((BufferedImage) currentImage, currentCrowd.getWidth(), currentCrowd.getHeight());
        }
        catch (IOException ex)
        {
            Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        UpdateImageView();
    }//GEN-LAST:event_jButtonCrowdMouseClicked

    private void jButtonOpenComPortMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonOpenComPortMouseClicked
        String comport = jTextFieldComPort.getText();
        int baudrate = Integer.parseInt(jTextFieldBaudRate.getText());
        serialHandler = new SerialHandler(comport, baudrate);
        if(serialHandler.initialize())
        {
            jLabelComStatus.setText("COM Port: Open");
        }
        else
        {
            jLabelComStatus.setText("COM Port: Closed");
        }
    }//GEN-LAST:event_jButtonOpenComPortMouseClicked

    private void jButtonThreadStartMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonThreadStartMouseClicked
        
        stopThread = false;
        jButtonThreadStart.setEnabled(false);
        jButtonThreadStop.setEnabled(true);
        
        SwingWorker<Void, Void> worker = new SwingWorker<Void, Void>()
        {
            @Override
            protected Void doInBackground()
            {
                for(;;)
                {
                    if(serialHandler.PortOpen && currentCrowd != null && !stopThread)
                    {
                        Color[][] imgData = new Converter().CombineImageWithCrowd(currentCrowd, new ImageHandler().takeScreenShot());

                        byte[] header = protocolHandler.createHeader(currentCrowd);
                        byte[][] data = protocolHandler.createPixels(imgData, currentCrowd);

                        try
                        {
                            //Send Header
                            serialHandler.writeData(header);

                            //Send pixels
                            for (int i = 0; i < data.length; i++)
                            {
                                //Send 1 pixel
                                serialHandler.writeData(data[i]);
                                Thread.sleep(20); //25
                            }
                        }
                        catch (InterruptedException ex)
                        {
                            Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                }
            }
        };
        
        worker.execute();
    }//GEN-LAST:event_jButtonThreadStartMouseClicked

    private void jButtonThreadStopMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonThreadStopMouseClicked
            jButtonThreadStart.setEnabled(true);
            jButtonThreadStop.setEnabled(false);
            stopThread = true;
    }//GEN-LAST:event_jButtonThreadStopMouseClicked
   
    /*

    */
    
    
    JLabel jlab = new JLabel();
    private void UpdateImageView()
    {
        jlab.setIcon(new ImageIcon(currentImage));
        jlab.setHorizontalAlignment(JLabel.CENTER);
        jSPImage.getViewport().add(jlab);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCrowd;
    private javax.swing.JButton jButtonOpenComPort;
    private javax.swing.JButton jButtonScreenshot;
    private javax.swing.JButton jButtonThreadStart;
    private javax.swing.JButton jButtonThreadStop;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabelComStatus;
    private javax.swing.JScrollPane jSPImage;
    private javax.swing.JTextField jTextFieldBaudRate;
    private javax.swing.JTextField jTextFieldComPort;
    // End of variables declaration//GEN-END:variables
}
